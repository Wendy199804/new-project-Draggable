const obj = {
     // 组合总收益分解
    total: `在所选时间段内，股票组合的累计收益率为<slot></slot>，基准的累计收益率为<slot></slot>，主动性收益为<slot></slot>。 主动性收益指组合相对基准的超额收益。`,

    // 组合总收益因子分解
    total_level2: `组合总收益可分解到全A因子、风格因子、行业因子和个股选择。 全A因子在这里解释了股票组合总收益可被全A市场解释的部分。 风格因子解释了所有风格因子对总收益的贡献。 行业因子可视为行业剔除掉市场和其他风格因子影响后的收益。 个股选择是总收益中无法被因子解释的部分，即阿尔法。`,
    // 组合主动性收益因子分解
    active: `主动性收益可分解到全A因子、风格因子、行业因子和个股选择。 全A因子在这里解释了股票组合因停牌等原因造成的与基准组合的差异。 风格因子反映了组合与基准在风格上的差异形成的主动性收益。 行业因子可视为行业剔除掉市场和其他风格因子影响后的收益。 个股选择是主动性收益中无法被因子解释的部分。`,

    // 组合总收益风格因子分解
    style_total: `风格因子收益可继续分解为贝塔、动量、规模、盈利、波动、成长、价值、杠杆、流动性和中盘这十个因子。 在所选时段内，<slot></slot>因子给风格因子收益带来了最大的贡献，累计收益率为<slot></slot>。而<slot></slot>因子给风格因子收益带来的贡献最小，为<slot></slot>。`,
    // 组合主动性收益风格因子分解
    style: `风格因子收益可继续分解为贝塔、动量、规模、盈利、波动、成长、价值、杠杆、流动性和中盘这十个因子。 在所选时段内，<slot></slot>因子给风格因子收益带来了最大的贡献，累计收益率为<slot></slot>。而<slot></slot>因子给风格因子收益带来的贡献最小，为<slot></slot>。`,

    // 组合总收益行业因子分解
    industry_total: `行业因子收益可继续分解为申万28个行业因子。在所选时段内，<slot></slot>行业给行业因子总收益带来了最大的贡献，累计收益率为<slot></slot>。而<slot></slot>行业给行业因子总收益带来的贡献最小，为<slot></slot>。`,
    // 组合主动性收益行业因子分解
    industry: `行业因子收益可继续分解为申万28个行业因子。在所选时段内，<slot></slot>行业给行业因子主动性收益带来了最大的贡献，累计收益率为<slot></slot>。而<slot></slot>行业给行业因子主动性收益带来的贡献最小，为<slot></slot>。`
}

export function getCurrentSummary(name, slots) {
    let _html = obj[name]
    if (slots) {
        let arr = _html.split('<slot></slot>')
        arr.forEach((v, k) => {
            if (k == arr.length - 1) return
            let index = _html.indexOf('<slot></slot>') + 6
            _html = `${_html.slice(0, index)}${slots[`slot${k+1}`]}${_html.slice(index)}`
        })
    }
    return _html
}